{"ast":null,"code":"var _jsxFileName = \"/Users/uladzimir/Desktop/My Folders/INCUBATOR/iamsocial/src/components/profileContentComponents/MyPosts/MyPosts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './MyPosts.module.css';\nimport { Post } from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classes = {\n  'myPosts': 'MyPorts_myPosts__6Q9c6',\n  'item': 'MyPorts_item__6Q9c6'\n};\nexport const MyPosts = props => {\n  _s();\n  const [myMessage, setMyMessage] = useState(\"\");\n  const [myPosts, setMyPosts] = useState(props.posts);\n  const [error, setError] = useState(\"Введите текст!!\");\n  const removePost = id => {\n    setMyPosts(myPosts.filter(post => post.id !== id));\n  };\n\n  // const newPostElement = useRef<HTMLTextAreaElement>(null);\n\n  const onChangePostMessage = event => {\n    setMyMessage(event.currentTarget.value);\n  };\n\n  // const addPost = () => {\n  //     const newPost = {id: v1(), messagePost: myMessage, count: 0}\n  //     if (myMessage.length < 1) {\n  //     return alert(error)\n  //     }\n  //     setMyPosts([newPost, ...myPosts])\n  //     setMyMessage('')\n  //\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.myPosts,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: myMessage,\n        onChange: onChangePostMessage,\n        className: 'inputTextarea'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.item,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), myPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        id: post.id,\n        messagePost: post.messagePost,\n        count: post.count,\n        removePost: removePost\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(MyPosts, \"1mk6/uaF0BRGULQWgbFo1arEk8o=\");\n_c = MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","useState","Post","jsxDEV","_jsxDEV","classes","MyPosts","props","_s","myMessage","setMyMessage","myPosts","setMyPosts","posts","error","setError","removePost","id","filter","post","onChangePostMessage","event","currentTarget","value","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addPost","item","map","messagePost","count","_c","$RefreshReg$"],"sources":["/Users/uladzimir/Desktop/My Folders/INCUBATOR/iamsocial/src/components/profileContentComponents/MyPosts/MyPosts.tsx"],"sourcesContent":["import React, {ChangeEvent, useRef, useState} from \"react\";\nimport './MyPosts.module.css';\nimport {Post} from \"./Post\";\nimport {PostType} from \"../../../redux/state\";\nimport {v1} from \"uuid\";\nimport {isDisabled} from \"@testing-library/user-event/dist/utils\";\n\nconst classes = {'myPosts': 'MyPorts_myPosts__6Q9c6', 'item': 'MyPorts_item__6Q9c6'};\n\nexport interface MyPostsProps {\n    posts: PostType[];\n    // removePost: (id: string) => void;\n}\n\nexport const MyPosts: React.FC<MyPostsProps> = (props) => {\n\n    const [myMessage, setMyMessage] = useState(\"\");\n    const [myPosts, setMyPosts] = useState<PostType[]>(props.posts);\n    const [error, setError] = useState(\"Введите текст!!\");\n\n    const removePost = (id: string) => {\n        setMyPosts(myPosts.filter(post => post.id !== id));\n    };\n\n    // const newPostElement = useRef<HTMLTextAreaElement>(null);\n\n    const onChangePostMessage = (event: ChangeEvent<HTMLTextAreaElement>) => {\n        setMyMessage(event.currentTarget.value)\n    }\n\n\n    // const addPost = () => {\n    //     const newPost = {id: v1(), messagePost: myMessage, count: 0}\n    //     if (myMessage.length < 1) {\n    //     return alert(error)\n    //     }\n    //     setMyPosts([newPost, ...myPosts])\n    //     setMyMessage('')\n    //\n    // };\n\n\n    return (\n        <div className={classes.myPosts}>\n            <div>\n                <textarea value={myMessage} onChange={onChangePostMessage} className={'inputTextarea'}/>\n            </div>\n            <div>\n                <button onClick={addPost}>Add Post</button>\n            </div>\n            <div className={classes.item}>\n                <h3>My posts</h3>\n                {myPosts.map(post => (\n                    <Post key={post.id} id={post.id} messagePost={post.messagePost} count={post.count}\n                          removePost={removePost}/>\n                ))}\n            </div>\n        </div>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAwBC,QAAQ,QAAO,OAAO;AAC1D,OAAO,sBAAsB;AAC7B,SAAQC,IAAI,QAAO,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK5B,MAAMC,OAAO,GAAG;EAAC,SAAS,EAAE,wBAAwB;EAAE,MAAM,EAAE;AAAqB,CAAC;AAOpF,OAAO,MAAMC,OAA+B,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEtD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAaM,KAAK,CAACM,KAAK,CAAC;EAC/D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,iBAAiB,CAAC;EAErD,MAAMe,UAAU,GAAIC,EAAU,IAAK;IAC/BL,UAAU,CAACD,OAAO,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtD,CAAC;;EAED;;EAEA,MAAMG,mBAAmB,GAAIC,KAAuC,IAAK;IACrEX,YAAY,CAACW,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EAC3C,CAAC;;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACInB,OAAA;IAAKoB,SAAS,EAAEnB,OAAO,CAACM,OAAQ;IAAAc,QAAA,gBAC5BrB,OAAA;MAAAqB,QAAA,eACIrB,OAAA;QAAUmB,KAAK,EAAEd,SAAU;QAACiB,QAAQ,EAAEN,mBAAoB;QAACI,SAAS,EAAE;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,eACN1B,OAAA;MAAAqB,QAAA,eACIrB,OAAA;QAAQ2B,OAAO,EAAEC,OAAQ;QAAAP,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACN1B,OAAA;MAAKoB,SAAS,EAAEnB,OAAO,CAAC4B,IAAK;MAAAR,QAAA,gBACzBrB,OAAA;QAAAqB,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBnB,OAAO,CAACuB,GAAG,CAACf,IAAI,iBACbf,OAAA,CAACF,IAAI;QAAee,EAAE,EAAEE,IAAI,CAACF,EAAG;QAACkB,WAAW,EAAEhB,IAAI,CAACgB,WAAY;QAACC,KAAK,EAAEjB,IAAI,CAACiB,KAAM;QAC5EpB,UAAU,EAAEA;MAAW,GADlBG,IAAI,CAACF,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtB,EAAA,CA7CWF,OAA+B;AAAA+B,EAAA,GAA/B/B,OAA+B;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}