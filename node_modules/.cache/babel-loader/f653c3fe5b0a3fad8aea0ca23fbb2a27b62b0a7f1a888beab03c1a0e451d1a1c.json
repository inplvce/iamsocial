{"ast":null,"code":"var _jsxFileName = \"/Users/uladzimir/Desktop/My Folders/INCUBATOR/iamsocial/src/components/profileContentComponents/MyPosts/MyPosts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport './MyPosts.module.css';\nimport { Post } from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet classes = {\n  'myPosts': 'MyPorts_myPosts__6Q9c6',\n  'item': 'MyPorts_item__6Q9c6'\n};\nexport const MyPosts = props => {\n  _s();\n  // let newPostElement = React.createRef()\n\n  let newPostElement = useRef(null);\n  const addPost = () => {\n    if (newPostElement.current) {\n      // Доступ к текущему значению рефа\n      console.log(newPostElement.current.value);\n    }\n  };\n  const removePost = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.myPosts,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: newPostElement,\n        className: 'inputTextarea',\n        onChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.item,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), props.posts.map(p => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          id: p.id,\n          messagePost: p.messagePost,\n          count: p.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n_s(MyPosts, \"xcKSpDLLZjTIhaVLwUiIkUdJR/0=\");\n_c = MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","useRef","Post","jsxDEV","_jsxDEV","classes","MyPosts","props","_s","newPostElement","addPost","current","console","log","value","removePost","className","myPosts","children","ref","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","item","posts","map","p","id","messagePost","count","_c","$RefreshReg$"],"sources":["/Users/uladzimir/Desktop/My Folders/INCUBATOR/iamsocial/src/components/profileContentComponents/MyPosts/MyPosts.tsx"],"sourcesContent":["import React, {useRef} from \"react\";\nimport './MyPosts.module.css'\nimport {Post} from \"./Post\";\nimport {PostType, ProfilePageType} from \"../../../redux/state\";\n\n\nlet classes = { 'myPosts': 'MyPorts_myPosts__6Q9c6', 'item': 'MyPorts_item__6Q9c6' }\n\nexport const MyPosts = (props: ProfilePageType) => {\n    // let newPostElement = React.createRef()\n\n    let newPostElement = useRef<HTMLTextAreaElement>(null);\n\n    const addPost = () => {\n        if (newPostElement.current) {\n            // Доступ к текущему значению рефа\n            console.log(newPostElement.current.value);\n        }\n    }\n\n    const removePost = () => {\n\n    }\n\n    return <div className={classes.myPosts}>\n        <div>\n            <textarea ref={newPostElement} className={'inputTextarea'} onChange={()=>{}} />\n        </div>\n        <div>\n            <button onClick={addPost}>Add Post</button>\n        </div>\n        <div className={classes.item}>\n            <h3>My posts</h3>\n            {props.posts.map((p => {\n                return (\n                    <Post id={p.id} messagePost={p.messagePost} count={p.count}/>\n                )\n            }))}\n\n        </div>\n    </div>\n}\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,QAAO,OAAO;AACnC,OAAO,sBAAsB;AAC7B,SAAQC,IAAI,QAAO,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5B,IAAIC,OAAO,GAAG;EAAE,SAAS,EAAE,wBAAwB;EAAE,MAAM,EAAE;AAAsB,CAAC;AAEpF,OAAO,MAAMC,OAAO,GAAIC,KAAsB,IAAK;EAAAC,EAAA;EAC/C;;EAEA,IAAIC,cAAc,GAAGR,MAAM,CAAsB,IAAI,CAAC;EAEtD,MAAMS,OAAO,GAAGA,CAAA,KAAM;IAClB,IAAID,cAAc,CAACE,OAAO,EAAE;MACxB;MACAC,OAAO,CAACC,GAAG,CAACJ,cAAc,CAACE,OAAO,CAACG,KAAK,CAAC;IAC7C;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM,CAEzB,CAAC;EAED,oBAAOX,OAAA;IAAKY,SAAS,EAAEX,OAAO,CAACY,OAAQ;IAAAC,QAAA,gBACnCd,OAAA;MAAAc,QAAA,eACId,OAAA;QAAUe,GAAG,EAAEV,cAAe;QAACO,SAAS,EAAE,eAAgB;QAACI,QAAQ,EAAEA,CAAA,KAAI,CAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC,eACNpB,OAAA;MAAAc,QAAA,eACId,OAAA;QAAQqB,OAAO,EAAEf,OAAQ;QAAAQ,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACNpB,OAAA;MAAKY,SAAS,EAAEX,OAAO,CAACqB,IAAK;MAAAR,QAAA,gBACzBd,OAAA;QAAAc,QAAA,EAAI;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBjB,KAAK,CAACoB,KAAK,CAACC,GAAG,CAAEC,CAAC,IAAI;QACnB,oBACIzB,OAAA,CAACF,IAAI;UAAC4B,EAAE,EAAED,CAAC,CAACC,EAAG;UAACC,WAAW,EAAEF,CAAC,CAACE,WAAY;UAACC,KAAK,EAAEH,CAAC,CAACG;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAErE,CAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACV,CAAC;AAAAhB,EAAA,CAjCYF,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}