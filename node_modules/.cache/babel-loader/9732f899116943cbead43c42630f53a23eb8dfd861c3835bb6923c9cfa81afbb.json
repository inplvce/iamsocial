{"ast":null,"code":"var _jsxFileName = \"/Users/uladzimir/Desktop/My Folders/INCUBATOR/iamsocial/src/components/profileContentComponents/MyPosts/MyPosts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport './MyPosts.module.css';\nimport { Post } from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classes = {\n  'myPosts': 'MyPorts_myPosts__6Q9c6'\n};\nexport const MyPosts = props => {\n  _s();\n  const newPostElement = useRef(null);\n  const handleAddPost = () => {\n    const text = newPostElement.current.value;\n    props.addPost(text); // Вызываем функцию из пропсов\n    newPostElement.current.value = ''; // Очищаем поле после добавления поста\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.myPosts,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: newPostElement,\n        className: 'inputTextarea',\n        onChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.item,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), props.state.profilePage.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n        name: p.name,\n        messagePost: p.messagePost,\n        count: p.count\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(MyPosts, \"xcKSpDLLZjTIhaVLwUiIkUdJR/0=\");\n_c = MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","useRef","Post","jsxDEV","_jsxDEV","classes","MyPosts","props","_s","newPostElement","handleAddPost","text","current","value","addPost","className","myPosts","children","ref","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","item","state","profilePage","posts","map","p","name","messagePost","count","id","_c","$RefreshReg$"],"sources":["/Users/uladzimir/Desktop/My Folders/INCUBATOR/iamsocial/src/components/profileContentComponents/MyPosts/MyPosts.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport './MyPosts.module.css';\nimport { Post } from \"./Post\";\n\nconst classes = { 'myPosts': 'MyPorts_myPosts__6Q9c6' };\n\nexport const MyPosts = (props) => {\n    const newPostElement = useRef(null);\n\n    const handleAddPost = () => {\n        const text = newPostElement.current.value;\n        props.addPost(text); // Вызываем функцию из пропсов\n        newPostElement.current.value = ''; // Очищаем поле после добавления поста\n    };\n\n    return (\n        <div className={classes.myPosts}>\n            <div>\n                <textarea ref={newPostElement} className={'inputTextarea'} onChange={() => { }} />\n            </div>\n            <div>\n                <button onClick={handleAddPost}>Add Post</button>\n            </div>\n            <div className={classes.item}>\n                <h3>My posts</h3>\n                {props.state.profilePage.posts.map((p) => (\n                    <Post name={p.name} messagePost={p.messagePost} count={p.count} key={p.id} />\n                ))}\n            </div>\n        </div>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAO,sBAAsB;AAC7B,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,OAAO,GAAG;EAAE,SAAS,EAAE;AAAyB,CAAC;AAEvD,OAAO,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAMC,cAAc,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,IAAI,GAAGF,cAAc,CAACG,OAAO,CAACC,KAAK;IACzCN,KAAK,CAACO,OAAO,CAACH,IAAI,CAAC,CAAC,CAAC;IACrBF,cAAc,CAACG,OAAO,CAACC,KAAK,GAAG,EAAE,CAAC,CAAC;EACvC,CAAC;EAED,oBACIT,OAAA;IAAKW,SAAS,EAAEV,OAAO,CAACW,OAAQ;IAAAC,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,eACIb,OAAA;QAAUc,GAAG,EAAET,cAAe;QAACM,SAAS,EAAE,eAAgB;QAACI,QAAQ,EAAEA,CAAA,KAAM,CAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,eACNnB,OAAA;MAAAa,QAAA,eACIb,OAAA;QAAQoB,OAAO,EAAEd,aAAc;QAAAO,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACNnB,OAAA;MAAKW,SAAS,EAAEV,OAAO,CAACoB,IAAK;MAAAR,QAAA,gBACzBb,OAAA;QAAAa,QAAA,EAAI;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBhB,KAAK,CAACmB,KAAK,CAACC,WAAW,CAACC,KAAK,CAACC,GAAG,CAAEC,CAAC,iBACjC1B,OAAA,CAACF,IAAI;QAAC6B,IAAI,EAAED,CAAC,CAACC,IAAK;QAACC,WAAW,EAAEF,CAAC,CAACE,WAAY;QAACC,KAAK,EAAEH,CAAC,CAACG;MAAM,GAAMH,CAAC,CAACI,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACf,EAAA,CAzBWF,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}